# 完整配置参考：https://github.com/MetaCubeX/mihomo/blob/Meta/docs/config.yaml

# DNS封禁原理（已知大概率被封的DOT/DOH，需要根据本地ISP自行测试）
# 🤔 强烈推荐不要写域名形式的DOT/DOH，有些海外域名对应的多个IP都已被封禁，只有一个IP可用，可能因为超出DNS查询时间以失败结束（还没查到可以访问的DNS）

# DNS整体思路
# 1. DOT IP访问做兜底处理：需要国外DNS且ISP无法控制的（不是特别在意隐私国内也可以）
#     2.0 解析代理域名的DNS：由于ISP经常会污染代理域名，所以需要DOT/DOH访问
#     2.1 默认DNS：国内的普通DNS快速访问国内站点
#     2.2 一定范围的国内域名策略：快速访问
#     2.3 一定范围的国外域名策略：需要用DOT/DOH访问，避免DNS泄漏（不希望ISP知道我访问什么站点）

# 常用DNS服务
# Yandex DNS：俄罗斯最大的搜索引擎
  # tls://77.88.8.8
# 腾讯云
  # tls://dot.pub
# 阿里云
  # dns.alidns.com
  # 223.5.5.5
  # 223.6.6.6
# GoogleDNS
  # tls://8.8.8.8（大概率封禁）
  # tls://8.8.8.8
  # tls://dns.google
# clouflare
  # tls://1.1.1.1 （大概率封禁）
  # tls://1.0.0.1（小概率封禁）
  # https://1.1.1.1/dns-query （大概率封禁）
  # https://1.0.0.1/dns-query（小概率封禁）
  # tls://one.one.one.one(可用)
  # tls://security.cloudflare-dns.com(可用)
dns:
  use-system-hosts: false
  enable: true
  ipv6: true
  use-hosts: true
  respect-rules: false # dns根据rules代理，让代理服务器帮助走nameserver、fallback...
  enhanced-mode: fake-ip
  # 在默认fake-ip-mode: blacklist下所有未在fake-ip-filter匹配的地址，全部返回fake-ip
  # 在默认fake-ip-mode: whitelist下所有在fake-ip-filter匹配的地址，全部返回fake-ip
  # fake-ip-filter:
    # - 1.1.1.1
  default-nameserver: # 兜底nameserver、proxy-server-nameserver DNS是域名的情况如tls://域名（DOT、DOH）
    - tls://1.12.12.12
    - tls://8.8.4.4
    - tls://1.0.0.1
  proxy-server-nameserver: # 用于代理服务器域名进行DNS查询，而指定的DNS服务列表（某些代理DNS会被ISP更改，最好用tls）
    # 由于运营商会根据tls://域名，其中域名会走default-nameserver，DNS明文查询，这里运营商会拦截所有海外的DOT/DOH（有概率）
      # 1. 域名情况下，走default-nameserver，此时DNS明文查DOT/DOH的域名，有概率会被拦截域名
      # 2. IP形式下，使用海外tls://8.8.4.4也有可能拦截IP
    # 推荐：定义两个DOT，一个国内一个国外
    - tls://223.5.5.5
    # - tls://one.one.one.one
    - tls://security.cloudflare-dns.com
  # 优先于nameserver/fallback规则
  nameserver-policy:
    'geosite:openai,google,anthropic,cloudflare': [1.0.0.1, 8.8.4.4] # 备用：tls://8.8.4.4, tls://1.0.0.1
    'geosite:cn': [119.29.29.29] # 对国内geosite
    'rule-set:icloud,apple,direct,applications': [119.29.29.29]
    'geosite:gfw,greatfire': [tls://1.0.0.1, tls://8.8.4.4] # 对geosite中的gfw、greatfire
    'rule-set:gfw': [tls://1.0.0.1, tls://8.8.4.4]
  # 默认DNS
  nameserver:
    - 119.29.29.29
  # 国外DNS
  # fallback: 
  #   - 8.8.8.8
  #   - 1.1.1.1
  # fallback-filter:
  #   geoip: true
  #   geoip-code: CN
  #   ipcidr: # 当DNS响应为ipcidr包含的IP时，即意味着被该域名对应的IP已被污染，会再次走fallback DNS查询，得到真实IP
  #     - ...

# GEO相关内容默认采用 https://github.com/Loyalsoldier开发的
  # https://github.com/Loyalsoldier/v2ray-rules-dat

# 参考：https://github.com/Loyalsoldier/clash-rules?tab=readme-ov-file
rule-providers:
  reject:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
    path: ./ruleset/reject.yaml
    interval: 86400

  icloud:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt"
    path: ./ruleset/icloud.yaml
    interval: 86400

  apple:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"
    path: ./ruleset/apple.yaml
    interval: 86400

  google:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt"
    path: ./ruleset/google.yaml
    interval: 86400

  proxy:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"
    path: ./ruleset/proxy.yaml
    interval: 86400

  direct:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"
    path: ./ruleset/direct.yaml
    interval: 86400

  private:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"
    path: ./ruleset/private.yaml
    interval: 86400

  gfw:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"
    path: ./ruleset/gfw.yaml
    interval: 86400

  tld-not-cn:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"
    path: ./ruleset/tld-not-cn.yaml
    interval: 86400

  telegramcidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt"
    path: ./ruleset/telegramcidr.yaml
    interval: 86400

  cncidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
    path: ./ruleset/cncidr.yaml
    interval: 86400

  lancidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
    path: ./ruleset/lancidr.yaml
    interval: 86400

  applications:
    type: http
    behavior: classical
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"
    path: ./ruleset/applications.yaml
    interval: 86400

  # 自定义的开发直连环境
  dev-direct:
    type: http
    behavior: classical
    url: https://jybill.github.io/mihomo-config-rules/rule-set/dev-direct.yaml
    path: ./ruleset/dev-direct.yaml
    format: yaml
    interval: 86400

  daily-foreign:
    type: http
    behavior: classical
    url: https://jybill.github.io/mihomo-config-rules/rule-set/daily-foreign.yaml
    path: ./ruleset/daily-foreign.yaml
    format: yaml
    interval: 86400